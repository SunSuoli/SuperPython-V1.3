[结构]
While = "True↑while\0D\0A"
For = "↑for\0D\0A"
如果 = "↑if\0D\0A"
否则如果 = "↑elif\0D\0A"
否则 = "↑else\0D\0A"
函数 = "function()↑def\0D\0A"
继续 = "continue↑out\0D\0A"
停止 = "break↑out\0D\0A"
自定义 = "↑custom\0D\0A"
系统延时 = "time.?单位?(?数值?)#sleep/sleep_ms/sleep_us#1/10/100/1000↑out\0D\0A"

[变量]
变量赋值 = "i=↑out\0D\0A"
变量值 = "i↑in\0D\0A"

[运算]
比较运算 = "?运算符?#/==/!=/>/>=/</<=↑compare\0D\0A"
逻辑运算 = "?运算符?#/and/or/not↑logic\0D\0A"

[SuperCar]
SCar集成 = "import pyb,time,_thread,motors,dservo,ports,download\0Afrom pyb import Timer,UART,Pin,ADC,DAC\0Afrom motors import Motor\0Afrom ports import Lwalk\0Auart = UART(2,9600,timeout=100)\0Am=Motor(0,0)\0Asw = pyb.Switch()\0Adistance=0\0A\0Alock=_thread.allocate_lock()\0A_thread.start_new_thread(download.LOAD, (uart,))\0A↑out\0D\0A"
SCar测距接口 = "(Trig,Echo)=ports.Sonar('?接口?')\0Adef getdistance(t,e):\0A    global distance\0A    while True:\0A        distance=ports.Distance(t,e)	\0A_thread.start_new_thread(getdistance,(Trig,Echo,))\0A#/J1/J2/J3/J4↑out\0D\0A"
SCar巡线接口 = "(L,R)=ports.Lwalk('?接口?')#/J1/J2/J3/J4↑out\0D\0A"
SCar左巡线 = "L.value()↑in\0D\0A"
SCar右巡线 = "R.value()↑in\0D\0A"
SCar超声波 = "distance↑in\0D\0A"
SCar按键 = "sw()↑in\0D\0A"
SCar加速度 = "pyb.Accel().x()↑in\0D\0A"
SCar蓝牙 = "bluetoothdata↑in\0D\0A"
SCarLED = "pyb.LED(?LED灯序号?).?状态?()#/1/2/3/4/i#/on/off↑out\0D\0A"
SCar电机启动 = "m.run()↑out\0D\0A"
SCar左轮 = "m.dc1=?速度?#/-100/-80/-60/-40/-20/0/20/40/60/80/100↑out\0D\0A"
SCar右轮 = "m.dc2=?速度?#/-100/-80/-60/-40/-20/0/20/40/60/80/100↑out\0D\0A"
SCar延时 = "pyb.delay(?时长?)#/1/10/100/1000↑out\0D\0A"
SCar上传 = "download.message=↑out\0D\0A"

[萝卜派]
萝卜库 = "import pyb↑out\0D\0A"
管脚库 = "from pyb import Pin↑out\0D\0A"
定时器 = "tim?名称? =Timer(?定时器?,freq=?频率?)#1/2/3/4/5/6/7/8/9/10/11#1/2/4/7/8/9/10/11/12/13/14#1/10/100/1000↑out\0D\0A"
DIO = "key1 = Pin("?输入端口?",?IO?)#X1/X2/X3/X4/X5/X6/X7/X8/X9/X10/X11/X12/X13/X14/X15/X16/X17/X18/X19/X20/X21/X22/Y1/Y2/Y3/Y4/Y5/Y6/Y7/Y8/Y9/Y10/Y11#pyb.Pin.IN/pyb.Pin.OUT_PP↑out\0D\0A"
AIO = "key1 = ?IO?(Pin("?输入端口?"))#ADC/DAC#X1/X2/X3/X4/X5/X6/X7/X8/X9/X10/X11/X12/X13/X14/X15/X16/X17/X18/X19/X20/X21/X22/Y1/Y2/Y3/Y4/Y5/Y6/Y7/Y8/Y9/Y10/Y11↑out\0D\0A"
Do = "key1.value(?状态?)#0/1↑out\0D\0A"
Di = "key1.value()↑in\0D\0A"
Ai = "key1.read()↑in\0D\0A"
Ao = "key1.write(?输出值?)#0/10/50/100/150/200/255↑out\0D\0A"

[树莓派]
树莓派库 = "import RPi.GPIO as GPIO↑out\0D\0A"
时钟 = "import time↑out\0D\0A"
端口模式 = "GPIO.setmode(GPIO.?模式? )#BOARD/BCM↑out\0D\0A"
定义输入 = "GPIO.setup(pin?输入端口?,GPIO.IN)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑out\0D\0A"
定义输出 = "GPIO.setup(pin?输出端口?,GPIO.OUT)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑out\0D\0A"
定义初始电平 = "GPIO.setup(pin?端口?,GPIO.OUT,initial=GPIO.HIGH)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑out\0D\0A"
输入值 = "GPIO.input(pin?输入端口?)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑in\0D\0A"
输出开 = "GPIO.output(pin?端口?, 1)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑out\0D\0A"
输出关 = "GPIO.output(pin?端口?, 0)#0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15/16/17/18/19/20/21/22/23/24/25/26/27/28↑out\0D\0A"